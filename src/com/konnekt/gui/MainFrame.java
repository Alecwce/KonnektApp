
package com.konnekt.gui;

import com.konnekt.controlador.Konnekt;
import com.konnekt.modelo.*;
import java.awt.Font;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.*;
/**
 *
 * @author Alexwce
 */
public class MainFrame extends javax.swing.JFrame {
    
    private Konnekt konnekt;
    private Usuario usuarioActual;  
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MainFrame.class.getName());

    /**
     * Creates new form MainFrame
     */
    
    public MainFrame() {
        initComponents();
    }
    
    public MainFrame(Konnekt konnekt) {
        initComponents();
        this.konnekt = konnekt;
        this.usuarioActual = konnekt.getUsuarioActual();
        this.setTitle("Konnekt - Sesión iniciada como @" + usuarioActual.getNombreUsuario());
        this.setLocationRelativeTo(null);

        // Configuración inicial
        configurarApariencia();
        actualizarTodo();
    }
    
    private void configurarApariencia() {
        // Mejorar la fuente de las áreas de texto
        Font font = new Font("Monospaced", Font.PLAIN, 14);
        txtFeed.setFont(font);
        txtNotificaciones.setFont(font);
        txtNuevaPublicacion.setFont(font);
    }

    // Método central para refrescar todos los datos
    private void actualizarTodo() {
        actualizarFeed();
        actualizarListaUsuarios();
        actualizarNotificaciones();
    }
    
    private void actualizarFeed() {
        txtFeed.setText(""); // Limpiar el área
        List<Publicacion> feed = usuarioActual.getSeguidos().stream()
                .flatMap(seguido -> seguido.getPublicaciones().stream())
                .sorted(Comparator.comparing(Publicacion::getFechaCreacion).reversed())
                .collect(Collectors.toList());

        if (feed.isEmpty()) {
            txtFeed.setText("Tu feed está vacío. ¡Sigue a otros usuarios para ver sus publicaciones!");
        } else {
            StringBuilder sb = new StringBuilder();
            for (Publicacion p : feed) {
                // Usamos el método mostrar() del modelo, pero necesitaremos adaptarlo o crear uno nuevo para GUI
                // Por ahora, una simple representación de texto:
                sb.append("---------------------------------\n");
                sb.append("@").append(p.getAutor().getNombreUsuario()).append(":\n");
                // Aquí deberíamos diferenciar entre PublicacionTexto e Imagen
                if(p instanceof PublicacionTexto){
                    sb.append(((PublicacionTexto) p).getTexto()).append("\n");
                }
                sb.append("Likes: ").append(p.getLikes().size()).append("\n");
                sb.append("---------------------------------\n\n");
            }
            txtFeed.setText(sb.toString());
        }
        txtFeed.setCaretPosition(0); // Scroll al principio
    }

    private void actualizarListaUsuarios() {
        DefaultListModel<String> model = new DefaultListModel<>();
        for (Usuario u : konnekt.getUsuarios()) {
            if (!u.equals(usuarioActual)) { // No mostrarse a sí mismo
                model.addElement(u.getNombreUsuario());
            }
        }
        listaUsuarios.setModel(model);
    }
    
    private void actualizarNotificaciones() {
        txtNotificaciones.setText("");
        List<Notificacion> notificaciones = usuarioActual.getNotificaciones();
         if(notificaciones.isEmpty()){
            txtNotificaciones.setText("No tienes notificaciones nuevas.");
        } else {
            StringBuilder sb = new StringBuilder();
            for(int i = notificaciones.size() - 1; i >= 0; i--){
                Notificacion n = notificaciones.get(i);
                // Similar al feed, creamos una representación de texto
                sb.append("[").append(n.getFecha().toLocalDate()).append("] ");
                sb.append(n.getUsuarioOrigen().getNombreUsuario()).append(" ");
                sb.append(n.getMensaje()).append("\n");
            }
            txtNotificaciones.setText(sb.toString());
        }
        txtNotificaciones.setCaretPosition(0);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPanePrincipal = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtFeed = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNuevaPublicacion = new javax.swing.JTextArea();
        btnPublicar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaUsuarios = new javax.swing.JList<>();
        btnSeguir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtNotificaciones = new javax.swing.JTextArea();
        btnCerrarSesion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtFeed.setColumns(20);
        txtFeed.setRows(5);
        jScrollPane1.setViewportView(txtFeed);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
        );

        tabbedPanePrincipal.addTab("Feed", jPanel1);

        txtNuevaPublicacion.setColumns(20);
        txtNuevaPublicacion.setRows(5);
        jScrollPane2.setViewportView(txtNuevaPublicacion);

        btnPublicar.setText("Publicar");
        btnPublicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPublicarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(btnPublicar)))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPublicar)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        tabbedPanePrincipal.addTab("Nueva Publicación", jPanel2);

        listaUsuarios.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(listaUsuarios);

        btnSeguir.setText("Seguir ");
        btnSeguir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeguirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSeguir)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSeguir)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tabbedPanePrincipal.addTab("Usuarios", jPanel3);

        txtNotificaciones.setColumns(20);
        txtNotificaciones.setRows(5);
        jScrollPane4.setViewportView(txtNotificaciones);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        tabbedPanePrincipal.addTab("Notificaciones", jPanel4);

        btnCerrarSesion.setText("Cerrar Sesión");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbedPanePrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCerrarSesion)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPanePrincipal)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCerrarSesion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPublicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPublicarActionPerformed
        String texto = txtNuevaPublicacion.getText();
        if (!texto.trim().isEmpty()) {
            usuarioActual.publicar(texto);
            txtNuevaPublicacion.setText("");
            JOptionPane.showMessageDialog(this, "Publicación creada con éxito.");
            actualizarTodo(); // Refrescar para ver nuestra propia publicación en perfiles (si lo implementamos)
        }
    }//GEN-LAST:event_btnPublicarActionPerformed

    private void btnSeguirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeguirActionPerformed
        String nombreUsuarioSeleccionado = listaUsuarios.getSelectedValue();
        if (nombreUsuarioSeleccionado != null) {
            konnekt.buscarUsuarioPorNombre(nombreUsuarioSeleccionado).ifPresent(usuarioASeguir -> {
                usuarioActual.seguir(usuarioASeguir);
                JOptionPane.showMessageDialog(this, "Ahora sigues a @" + nombreUsuarioSeleccionado);
                actualizarTodo(); // Actualizar el feed
            });
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un usuario de la lista.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSeguirActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        konnekt.cerrarSesion();
        LoginFrame loginFrame = new LoginFrame(konnekt);
        loginFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
      /*  try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(() -> new MainFrame().setVisible(true));
    }
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnPublicar;
    private javax.swing.JButton btnSeguir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> listaUsuarios;
    private javax.swing.JTabbedPane tabbedPanePrincipal;
    private javax.swing.JTextArea txtFeed;
    private javax.swing.JTextArea txtNotificaciones;
    private javax.swing.JTextArea txtNuevaPublicacion;
    // End of variables declaration//GEN-END:variables
}
